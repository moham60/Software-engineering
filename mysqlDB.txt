CREATE DATABASE Scheduling_Project;
USE Scheduling_Project;

CREATE TABLE Users (
    UserId INT IDENTITY(1,1) PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) NOT NULL UNIQUE,
    Password VARCHAR(20) NOT NULL,
    Role NVARCHAR(20) CHECK (Role IN ('Doctor', 'Student')) NOT NULL,
    CreateDate DATETIME DEFAULT GETDATE(),
    UpdateDate DATETIME DEFAULT GETDATE()
);

CREATE TABLE Courses (
    CourseId INT IDENTITY(1,1) PRIMARY KEY,
	CourseName VARCHAR(50) NOT NULL,
	DoctorId INT NOT NULL,
	CreateDate DATETIME DEFAULT GETDATE(),
    UpdateDate DATETIME DEFAULT GETDATE(),
    Description VARCHAR(255) NOT NULL DEFAULT 'No description available';
    FOREIGN KEY (DoctorId) REFERENCES Users(UserId) ON DELETE CASCADE
);

CREATE TABLE Scheduling (
    ScheduleId INT IDENTITY(1,1) PRIMARY KEY,
	CourseId INT NOT NULL,
	Title VARCHAR(100) NOT NULL,
	Type NVARCHAR(20) CHECK (Type IN ('Lecture', 'Assignment', 'Exam')) NOT NULL,
	StartTime DATETIME NOT NULL,
    EndTime DATETIME NOT NULL,
    Deadline DATETIME NULL,
    CreateDate DATETIME DEFAULT GETDATE(),
    UpdateDate DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId) ON DELETE CASCADE
);

CREATE TABLE Material (
    MaterialId INT IDENTITY(1,1) PRIMARY KEY,
	CourseId INT NOT NULL,
	Title VARCHAR(100) NOT NULL,
	Filepath VARCHAR(250)NOT NULL,
	UploadBy INT NOT NULL,
	UploadeDate DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId) ON DELETE CASCADE,
    FOREIGN KEY (UploadBy) REFERENCES Users(UserId)
);
CREATE TABLE Assignment (
    AssignmentId INT AUTO_INCREMENT PRIMARY KEY,
    CourseId INT NOT NULL,
    Title VARCHAR(100) NOT NULL,
    FileType VARCHAR(50) NOT NULL,
    UploadBy INT NOT NULL,
    UploadDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    Deadline DATETIME NOT NULL,
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId) ON DELETE CASCADE,
    FOREIGN KEY (UploadBy) REFERENCES Users(UserId)
);

CREATE TABLE Registration (
    RegistrationId INT IDENTITY(1,1) PRIMARY KEY,
    StudentId INT NOT NULL,
    CourseId INT NOT NULL,
    RegistrationDatE DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (StudentId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId)
);

CREATE TABLE Messaging (
    MessagingId INT IDENTITY(1,1) PRIMARY KEY,
    SenderId INT NOT NULL,
    RecipientId INT NOT NULL,
    Message TEXT NOT NULL,
    IsRead BIT DEFAULT 0,
    CreateDate DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (SenderId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (RecipientId) REFERENCES Users(UserId) 
);
CREATE TABLE CourseStudents (
    CourseStudentId INT AUTO_INCREMENT PRIMARY KEY,
    CourseId INT NOT NULL,
    StudentId INT NOT NULL,
    JoinDate DATETIME DEFAULT NOW(),
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId) ON DELETE CASCADE,
    FOREIGN KEY (StudentId) REFERENCES Users(UserId) ON DELETE CASCADE
);
