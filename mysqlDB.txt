CREATE DATABASE Scheduling_Project;
USE Scheduling_Project;

CREATE TABLE Users (
    UserId INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) NOT NULL UNIQUE,
    Password VARCHAR(20) NOT NULL,
    Role ENUM('Doctor', 'Student') NOT NULL,
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    UpdateDate DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Courses (
    CourseId INT AUTO_INCREMENT PRIMARY KEY,
    CourseName VARCHAR(50) NOT NULL,
    DoctorId INT NOT NULL,
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    UpdateDate DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    Description VARCHAR(255) NOT NULL DEFAULT 'No description available',
    FOREIGN KEY (DoctorId) REFERENCES Users(UserId) ON DELETE CASCADE
);

CREATE TABLE Scheduling (
    ScheduleId INT AUTO_INCREMENT PRIMARY KEY,
    CourseId INT NOT NULL,
    Title VARCHAR(100) NOT NULL,
    Type ENUM('Lecture', 'Assignment', 'Exam') NOT NULL,
    StartTime DATETIME NOT NULL,
    EndTime DATETIME NOT NULL,
    Deadline DATETIME NULL,
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    UpdateDate DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId) ON DELETE CASCADE
);

CREATE TABLE Material (
    MaterialId INT AUTO_INCREMENT PRIMARY KEY,
    CourseId INT NOT NULL,
    Title VARCHAR(100) NOT NULL,
    Filepath VARCHAR(250) NOT NULL,
    UploadBy INT NOT NULL,
    UploadDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId) ON DELETE CASCADE,
    FOREIGN KEY (UploadBy) REFERENCES Users(UserId)
);

CREATE TABLE Assignment (
    AssignmentId INTEGER PRIMARY KEY AUTOINCREMENT,
    CourseId INTEGER NOT NULL,
    Title TEXT NOT NULL,
    FileType TEXT NOT NULL,
    UploadBy INTEGER NOT NULL,
    UploadDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    Deadline DATETIME NOT NULL,
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId) ON DELETE CASCADE,
    FOREIGN KEY (UploadBy) REFERENCES Users(UserId)
);


CREATE TABLE Friends (
    FriendId INT NOT NULL,
    UserId INT NOT NULL,
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (FriendId, UserId)
);

CREATE TABLE Messaging (
    MessagingId INT AUTO_INCREMENT PRIMARY KEY,
    SenderId INT NOT NULL,
    RecipientId INT NOT NULL,
    Message TEXT NOT NULL,
    IsRead TINYINT(1) DEFAULT 0,
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (SenderId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (RecipientId) REFERENCES Users(UserId)
);

CREATE TABLE CourseStudents (
    CourseStudentId INT AUTO_INCREMENT PRIMARY KEY,
    CourseId INT NOT NULL,
    StudentId INT NOT NULL,
    JoinDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CourseId) REFERENCES Courses(CourseId) ON DELETE CASCADE,
    FOREIGN KEY (StudentId) REFERENCES Users(UserId) ON DELETE CASCADE
);
ALTER TABLE Assignment ADD COLUMN Filename VARCHAR(255) NOT NULL;

